import requests
from bs4 import BeautifulSoup
import fake_useragent

user = fake_useragent.UserAgent().random
header = {'user-agent': user}
STREET = {'1': '—É–ª. –ö–æ–º—Å–æ–º–æ–ª—å—Å–∫–∞—è, –¥. 3',
          '2': '—É–ª. –ü–æ–ª–∏—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è, –¥. 55',
          '3': '—É–ª. –¢–µ–∫—Å—Ç–∏–ª—å–Ω–∞—è, –¥. 33, –ø–æ–º. 1-9',
          '22': '—É–ª. 50 –ª–µ—Ç –û–∫—Ç—è–±—Ä—è, –¥.42/1',
          '41': '–ø. –ú–æ—Ö–æ–≤–∞—è –ü–∞–¥—å, –ª–∏—Ç–µ—Ä 25/1',
          '42': '—É–ª. –ó–µ–π—Å–∫–∞—è, –¥.88, –ø–æ–º.III',
          '45': '—É–ª. –ü–∏–æ–Ω–µ—Ä—Å–∫–∞—è, –¥.33',
          '48': '—É–ª. –¢–µ–∞—Ç—Ä–∞–ª—å–Ω–∞—è, –¥.236',
          '50': '—É–ª. –ù–∞–≥–æ—Ä–Ω–∞—è, –¥.1',
          '51': '—É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 29/37',
          '78': '—É–ª. –í–æ—Ä–æ–Ω–∫–æ–≤–∞, –¥.26',
          '78/1': '—É–ª. –í–æ—Ä–æ–Ω–∫–æ–≤–∞, –¥.26/3 ',
          '80': '—É–ª. –ö–∞–ª–∏–Ω–∏–Ω–∞, –¥.84 –ª–∏—Ç–µ—Ä –ë',
          '81': '—É–ª. –°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∞—è, –¥.38',
          '83': '—É–ª. –ü–∏–æ–Ω–µ—Ä—Å–∫–∞—è, –¥.14, –ª–∏—Ç–µ—Ä –ê',
          '101': '—É–ª. –ò–Ω—Å—Ç–∏—Ç—É—Ç—Å–∫–∞—è/–ö–∞–ª–∏–Ω–∏–Ω–∞, –¥.1/140',
          '105': '—É–ª. –ú—É—Ö–∏–Ω–∞, –¥.114',
          '106': '—É–ª. –¢–µ–Ω–∏—Å—Ç–∞—è, 160',
          '107': '–ò–≥–Ω–∞—Ç—å–µ–≤—Å–∫–æ–µ —à–æ—Å—Å–µ, 10/4',
          '108': '—É–ª. –ê–º—É—Ä—Å–∫–∞—è, 201–ê',
          '115': '—É–ª. –®–∏–º–∞–Ω–æ–≤—Å–∫–æ–≥–æ, 38'}

def out(name):
    name = name.replace("n", "‚Ññ")
    result = "üè•–ê–º—É—Ä —Ñ–∞—Ä–º–∞—Ü–∏—èüè•\n"
    link = "https://www.amurfarma.ru/search/?q=" + name
    resource = requests.get(link, headers=header).text
    soup = BeautifulSoup(resource, 'lxml')
    titleAll = soup.findAll("a", {"class": "name"})
    priceAll = soup.findAll("div", {"class": "basket"})
    for i in range(min(len(titleAll), len(priceAll))):
        result += "     üíä" + " ".join(str(titleAll[i].text.lower().replace('–º–≥/–º–ª', '–º–≥').replace(' –≤–≤–µ–¥', '')).split()) + "\n    ü™ô" + " ".join(str(priceAll[i].text[:priceAll[i].text.index('.')]).split()) + "\n"
    #with open("1.html", "w", encoding="utf-8") as file: file.write(resource)
    return result


def out_min(name):
    name = name.replace("n", "‚Ññ")
    result = "üè•–ê–º—É—Ä —Ñ–∞—Ä–º–∞—Ü–∏—èüè•\n"
    link = "https://www.amurfarma.ru/search/?q=" + name
    resource = requests.get(link, headers=header).text
    soup = BeautifulSoup(resource, 'lxml')
    titleAll = soup.findAll("a", {"class": "name"})
    priceAll = soup.findAll("div", {"class": "basket"})
    price = 100000000.0
    title = ""
    for i in range(min(len(titleAll), len(priceAll))):
        new_price = float(" ".join(str(priceAll[i].text[:priceAll[i].text.index('.')]).split())[:-3].replace(",", "."))
        if new_price < price:
            price = new_price
            title = " ".join(str(titleAll[i].text.lower().replace('–º–≥/–º–ª', '–º–≥').replace(' –≤–≤–µ–¥', '')).split())
    if price != 100000000.0:
        result += "     üíä" + title + "\n    ü™ô" + str(price) + "—Ä—É–±.\n"
    return result


def out_availability(name):
    name = name.replace("n", "‚Ññ")
    result = "üè•–ê–º—É—Ä —Ñ–∞—Ä–º–∞—Ü–∏—èüè•\n"
    link = "https://www.amurfarma.ru/search/?q=" + name
    resource = requests.get(link, headers=header).text
    soup = BeautifulSoup(resource, 'lxml')
    item = soup.findAll("div", {"class": "product_wrap"})
    PRODUCT_ID = ''
    price = 100000000.0
    for i in range(len(item)):
        temp = item[i].find("div", {"class": "basket"})
        new_price = float(" ".join(str(temp.text[:temp.text.index('.')]).split())[:-3].replace(",", "."))
        if new_price < price:
            price = new_price
            datapid = str(item[i])
            PRODUCT_ID = datapid[datapid.index("data-pid=") + 10:datapid.index("data-pid=") + 15]
    link = "https://amurfarma.ru/local/templates/amurfarmacy_2015/ajax.php"
    data = {"ajaxtype": "availability",
            "PRODUCT_ID": PRODUCT_ID}
    resource = requests.post(link, headers=header, data=data).text
    soup = BeautifulSoup(resource, 'lxml')
    h = soup.findAll("div", {"class": "day_wrap"})
    for i in range(len(h)):
        result += h[i].find("h5").text + "\n"
        dragshop = h[i].findAll("div", {"class": "itemm"})
        for j in range(len(dragshop)):
            result += "      " + STREET[dragshop[j].text] + "\n"
    return result