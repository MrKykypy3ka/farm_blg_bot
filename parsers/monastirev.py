import requests
from bs4 import BeautifulSoup
import fake_useragent

user = fake_useragent.UserAgent().random
header = {'user-agent': user}
trash = ['–∞–º–ø—É–ª–∞ —Ç–µ–º–Ω–æ–≥–æ —Å—Ç–µ–∫–ª–∞ –≤ —É–ø–∞–∫–æ–≤–∫–µ –∫–æ–Ω—Ç—É—Ä–Ω–æ–π –ø–ª–∞—Å—Ç–∏–∫–æ–≤–æ–π (–ø–æ–¥–¥–æ–Ω—ã)',
         '—É–ø–∞–∫–æ–≤–∫–∞ –∫–æ–Ω—Ç—É—Ä–Ω–∞—è —è—á–µ–π–∫–æ–≤–∞—è',
         '–ø–æ–∫—Ä—ã—Ç—ã–µ –ø–ª–µ–Ω–æ—á–Ω–æ–π –æ–±–æ–ª–æ—á–∫–æ–π',
         '–¥–ª—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Ç–≤–æ—Ä–∞ –¥–ª—è –ø—Ä–∏–µ–º–∞ –≤–Ω—É—Ç—Ä—å',
         '–ø–∞–∫–µ—Ç –∏–∑ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞',
         '–ø–∞–∫–µ—Ç —Ü–µ—Ñ–ª–µ–Ω–æ–≤—ã–π',
         '—Ñ–ª–∞–∫–æ–Ω —Å —Ä–∞—Å–ø—ã–ª–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π',
         '—Ñ–ª–∞–∫–æ–Ω –ø–æ–ª–∏–º–µ—Ä–Ω—ã–π —Å —Ä–∞—Å–ø—ã–ª–∏—Ç–µ–ª–µ–º',
         '—Ñ–ª–∞–∫–æ–Ω –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–π —Å —Ä–∞—Å–ø—ã–ª–∏—Ç–µ–ª–µ–º',
         '—Ñ–ª–∞–∫–æ–Ω –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–π —Å —Ä–∞—Å–ø—ã–ª–∏—Ç–µ–ª–µ–º',
         '—Ñ–ª–∞–∫–æ–Ω',
         '—Ñ–ª–∞–∫–æ–Ω-–∫–∞–ø–µ–ª—å–Ω–∏—Ü–∞']


def out(name):
    result = "üè•–ú–æ–Ω–∞—Å—Ç—ã—Ä—ë–≤üè•\n"
    name = name.replace("n", "‚Ññ")
    link = "https://monastirev.ru/search?term=" + name
    cookies = {'kladr': '2800000100000'}
    resource = requests.post(link, headers=header, cookies=cookies).text
    soup = BeautifulSoup(resource, 'lxml')
    soup = soup.find('div', {'class': 'listing'})
    item = soup.findAll("div", {"class": "offer js-assortment-unit-show"})
    for elem in item:
        title = elem.find('div', {'class': 'offer__title link__text'}).text
        title = " ".join(str(title.lower()).split())
        dosage = elem.find('div', {'class': 'offer__description'}).text
        dosage = " ".join(str(dosage.lower()).split())
        dosage = dosage\
            .replace('–≤–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–∏—è', '–≤/–≤')\
            .replace('–≤–Ω—É—Ç—Ä–∏–º—ã—à–µ—á–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–∏—è', '–≤/–º')\
            .replace('—Ä–∞—Å—Ç–≤–æ—Ä', '—Ä-—Ä')\
            .replace('—Ç–∞–±–ª–µ—Ç–∫–∏', '—Ç–±–ª')\
            .replace('–∞–º–ø—É–ª–∞', '–∞–º–ø')
        price = elem.findAll('div', {'class': 'offer__price-block'})
        result += "     üíä" + title + ' ' + dosage + '\n'
        if len(price) == 0:
            date = elem.find('div', {'class': 'offer__historycal-date'}).text
            date = " ".join(str(date.lower()).split())
            price_now = elem.find('div', {'class': 'offer__price-current'}).text
            price_now = " ".join(str(price_now.lower()).replace(" ", "").split()) + '—Ä—É–±.'
            result += "    ü™ô" + date + price_now + '\n'
        elif 'offer__price-unavailable' in str(price[0]):
            date_fut = price[1].find('div', {'class': 'offer__price-block-header'}).text
            date_fut = " ".join(str(date_fut.lower()).split())
            price_fut = price[1].find('div', {'class': 'offer__price-current'}).text
            price_fut = " ".join(str(price_fut.lower()).replace(" ", "").split()) + '—Ä—É–±.'
            result += "    ü™ô" + date_fut + ': ' + price_fut + '\n'
        elif 'offer__price-unavailable' in str(price[1]):
            date_now = price[0].find('div', {'class': 'offer__price-block-header'}).text
            date_now = " ".join(str(date_now.lower()).split())
            price_now = price[0].find('div', {'class': 'offer__price-current'}).text
            price_now = " ".join(str(price_now.lower()).replace(" ", "").split()) + '—Ä—É–±.'
            result += "    ü™ô" + date_now + ' ' + price_now + '\n'
        else:
            date_now = price[0].find('div', {'class': 'offer__price-block-header'}).text
            date_now = " ".join(str(date_now.lower()).split())
            price_now = price[0].find('div', {'class': 'offer__price-current'}).text
            price_now = " ".join(str(price_now.lower()).replace(" ", "").split()) + '—Ä—É–±.'
            date_fut = price[1].find('div', {'class': 'offer__price-block-header'}).text
            date_fut = " ".join(str(date_fut.lower()).split())
            price_fut = price[1].find('div', {'class': 'offer__price-current'}).text
            price_fut = " ".join(str(price_fut.lower()).split()) + '—Ä—É–±.'
            result += "    ü™ô" + date_now + ' ' + price_now + '\n' + "    ü™ô" + date_fut + ': ' + price_fut + '\n'
    return result


def out_min(name):
    result = ''
    name = name.replace("n", "‚Ññ")
    price_temp = 1000000.0
    date_now_temp = ""
    date_fut_temp = ""
    price_fut_temp = ""
    link = "https://monastirev.ru/search?term=" + name
    cookies = {'kladr': '2800000100000'}
    resource = requests.post(link, headers=header, cookies=cookies).text
    soup = BeautifulSoup(resource, 'lxml')
    soup = soup.find('div', {'class': 'listing'})
    item = soup.findAll("div", {"class": "offer js-assortment-unit-show"})
    for elem in item:
        title = elem.find('div', {'class': 'offer__title link__text'}).text
        title = " ".join(str(title.lower()).split())
        dosage = elem.find('div', {'class': 'offer__description'}).text
        dosage = " ".join(str(dosage.lower()).split())
        dosage = dosage \
            .replace('–≤–Ω—É—Ç—Ä–∏–≤–µ–Ω–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–∏—è', '–≤/–≤') \
            .replace('–≤–Ω—É—Ç—Ä–∏–º—ã—à–µ—á–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–∏—è', '–≤/–º') \
            .replace('—Ä–∞—Å—Ç–≤–æ—Ä', '—Ä-—Ä') \
            .replace('—Ç–∞–±–ª–µ—Ç–∫–∏', '—Ç–±–ª') \
            .replace('–∞–º–ø—É–ª–∞', '–∞–º–ø')
        price = elem.findAll('div', {'class': 'offer__price-block'})
        if len(price) == 0:
            continue
        elif 'offer__price-unavailable' in str(price[0]):
            price_fut = price[1].find('div', {'class': 'offer__price-current'}).text
            price_fut = float(" ".join(str(price_fut.lower()).replace(" ", "").split()))
            if price_fut < price_temp:
                result = "üè•–ú–æ–Ω–∞—Å—Ç—ã—Ä—ë–≤üè•\n" + "     üíä" + title + ' ' + dosage + '\n'
                price_temp = price_fut
                date_now_temp = price[1].find('div', {'class': 'offer__price-block-header'}).text
                date_now_temp = " ".join(str(date_now_temp.lower()).split())
        elif 'offer__price-unavailable' in str(price[1]):
            price_now = price[0].find('div', {'class': 'offer__price-current'}).text
            price_now = float(" ".join(str(price_now.lower()).replace(" ", "").split()))
            if price_now < price_temp:
                result = "üè•–ú–æ–Ω–∞—Å—Ç—ã—Ä—ë–≤üè•\n" + "     üíä" + title + ' ' + dosage + '\n'
                date_now_temp = price[0].find('div', {'class': 'offer__price-block-header'}).text
                date_now_temp = " ".join(str(date_now_temp.lower()).split())
                price_temp = price_now
        else:
            price_now = price[0].find('div', {'class': 'offer__price-current'}).text
            price_now = float(" ".join(str(price_now.lower()).replace(" ", "").split()))
            if price_now < price_temp:
                result = "üè•–ú–æ–Ω–∞—Å—Ç—ã—Ä—ë–≤üè•\n" + "     üíä" + title + ' ' + dosage + '\n'
                date_now_temp = price[0].find('div', {'class': 'offer__price-block-header'}).text
                date_now_temp = " ".join(str(date_now_temp.lower()).split())
                date_fut_temp = price[1].find('div', {'class': 'offer__price-block-header'}).text
                date_fut_temp = " ".join(str(date_fut_temp.lower()).split())
                price_fut_temp = price[1].find('div', {'class': 'offer__price-current'}).text
                price_fut_temp = " ".join(str(price_fut_temp.lower()).split()) + '—Ä—É–±.'
                price_temp = price_now
    if price_temp != 1000000.0:
        result += "    ü™ô" + date_now_temp + ' ' + str(price_temp) + '—Ä—É–±.' + '\n' + "    ü™ô" + date_fut_temp + ': ' + price_fut_temp + '\n'
    else:
        result = "üè•–ú–æ–Ω–∞—Å—Ç—ã—Ä—ë–≤üè•\n"
    return result

def out_availability(name):
    result = "üè•–ú–æ–Ω–∞—Å—Ç—ã—Ä—ë–≤üè•\n"
    link = "https://monastirev.ru/search?term=" + name
    cookies = {'kladr': '2800000100000'}
    resource = requests.post(link, headers=header, cookies=cookies).text
    soup = BeautifulSoup(resource, 'lxml')
    item = soup.findAll("div", {"data-viewport-type": "list"})
    availability = ''
    price = 100000000.0
    for i in range(len(item)):
        if float("".join(item[i].find("div", {"class": "offer__price-current"}).text.split())) < price:
            availability = item[i].find("div", {"class": "preferred-trade-point-block__name flex text-bold"}).text
    result += availability
    return result